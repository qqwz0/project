# Generated by Django 4.2.18 on 2025-04-25 13:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0004_merge_20250318_2344'),
    ]

    operations = [
        migrations.CreateModel(
            name='OnlyStudent',
            fields=[
                ('student_id', models.OneToOneField(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_student_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('speciality', models.CharField(max_length=100)),
                ('course', models.IntegerField()),
                ('additional_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnlyTeacher',
            fields=[
                ('teacher_id', models.OneToOneField(limit_choices_to={'role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='catalog_teacher_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('academic_level', models.CharField(choices=[('Асистент', 'Асистент'), ('Доцент', 'Доцент'), ('Професор', 'Професор')], default='Асистент', max_length=50)),
                ('additional_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivation_text', models.TextField()),
                ('request_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('request_status', models.CharField(choices=[('Очікує', 'Очікує'), ('Активний', 'Активний'), ('Відхилено', 'Відхилено'), ('Завершено', 'Завершено')], default='Очікує', max_length=100)),
                ('grade', models.IntegerField(blank=True, null=True)),
                ('rejected_reason', models.TextField(blank=True, null=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('academic_year', models.CharField(blank=True, max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialty_name', models.CharField(max_length=100)),
                ('stream_code', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=100)),
                ('theme_description', models.TextField()),
                ('is_occupied', models.BooleanField(default=False)),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.onlyteacher')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=100)),
                ('student_id', models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='users_student_themes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('occupied', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('stream_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.stream')),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.onlyteacher')),
            ],
        ),
        migrations.CreateModel(
            name='RequestFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='request_files/%Y/%m/%d/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('version', models.IntegerField(default=1)),
                ('description', models.TextField(blank=True)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='catalog.request')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='request',
            name='slot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.slot'),
        ),
        migrations.AddField(
            model_name='request',
            name='student_id',
            field=models.ForeignKey(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='users_student_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='request',
            name='student_themes',
            field=models.ManyToManyField(blank=True, to='catalog.studenttheme'),
        ),
        migrations.AddField(
            model_name='request',
            name='teacher_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.onlyteacher'),
        ),
        migrations.AddField(
            model_name='request',
            name='teacher_theme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.teachertheme'),
        ),
    ]
