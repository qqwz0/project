# Generated manually on 2025-01-18

from django.db import migrations


def clean_and_set_departments(apps, schema_editor):
    """
    –û—á–∏—â–∞—î –≤—Å—ñ –∫–∞—Ñ–µ–¥—Ä–∏ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î —Ç—ñ–ª—å–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ
    """
    Department = apps.get_model('catalog', 'Department')
    OnlyTeacher = apps.get_model('catalog', 'OnlyTeacher')
    OnlyStudent = apps.get_model('catalog', 'OnlyStudent')
    Faculty = apps.get_model('catalog', 'Faculty')
    
    print("üîÑ –û—á–∏—â–µ–Ω–Ω—è —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –∫–∞—Ñ–µ–¥—Ä...")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç
    faculty = Faculty.objects.first()
    if not faculty:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É!")
        return
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ñ –Ω–∞–∑–≤–∏ –∫–∞—Ñ–µ–¥—Ä
    correct_departments = [
        '–°–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É–≤–∞–Ω–Ω—è',
        '–û–ø—Ç–æ–µ–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∏ —Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π',
        '–†–∞–¥—ñ–æ—Ñ—ñ–∑–∏–∫–∏ —Ç–∞ –∫–æ–º–ø\'—é—Ç–µ—Ä–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π',
        '–†–∞–¥—ñ–æ–µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏—Ö —ñ –∫–æ–º–ø\'—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º',
        '–§—ñ–∑–∏—á–Ω–æ—ó —Ç–∞ –±—ñ–æ–º–µ–¥–∏—á–Ω–æ—ó –µ–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∏',
        '–°–µ–Ω—Å–æ—Ä–Ω–æ—ó —Ç–∞ –Ω–∞–ø—ñ–≤–ø—Ä–æ–≤—ñ–¥–Ω–∏–∫–æ–≤–æ—ó –µ–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∏',
    ]
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –ø–æ—Ç–æ—á–Ω—ñ –∫–∞—Ñ–µ–¥—Ä–∏
    current_departments = list(Department.objects.all())
    print(f"üìã –ü–æ—Ç–æ—á–Ω—ñ –∫–∞—Ñ–µ–¥—Ä–∏ ({len(current_departments)}):")
    for dept in current_departments:
        print(f"   ‚Ä¢ {dept.department_name}")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∫–∞—Ñ–µ–¥—Ä–∏
    created_departments = {}
    for dept_name in correct_departments:
        dept, created = Department.objects.get_or_create(
            department_name=dept_name,
            defaults={'faculty': faculty}
        )
        created_departments[dept_name] = dept
        if created:
            print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–∞—Ñ–µ–¥—Ä—É: {dept_name}")
        else:
            print(f"üìå –ö–∞—Ñ–µ–¥—Ä–∞ –≤–∂–µ —ñ—Å–Ω—É—î: {dept_name}")
    
    # –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∫–∞—Ñ–µ–¥—Ä–∏
    # –î–ª—è –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤
    teachers_updated = 0
    for teacher in OnlyTeacher.objects.all():
        if teacher.department:
            old_dept_name = teacher.department.department_name
            # –®—É–∫–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –ø—Ä–∞–≤–∏–ª—å–Ω—É –∫–∞—Ñ–µ–¥—Ä—É
            for correct_name, correct_dept in created_departments.items():
                if (old_dept_name.lower() in correct_name.lower() or 
                    correct_name.lower() in old_dept_name.lower() or
                    any(word in correct_name.lower() for word in old_dept_name.lower().split() if len(word) > 3)):
                    teacher.department = correct_dept
                    teacher.save()
                    teachers_updated += 1
                    print(f"üîÑ –û–Ω–æ–≤–ª–µ–Ω–æ –≤–∏–∫–ª–∞–¥–∞—á–∞: {old_dept_name} ‚Üí {correct_name}")
                    break
    
    # –î–ª—è —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤
    students_updated = 0
    for student in OnlyStudent.objects.all():
        if student.department:
            old_dept_name = student.department.department_name
            # –®—É–∫–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –ø—Ä–∞–≤–∏–ª—å–Ω—É –∫–∞—Ñ–µ–¥—Ä—É
            for correct_name, correct_dept in created_departments.items():
                if (old_dept_name.lower() in correct_name.lower() or 
                    correct_name.lower() in old_dept_name.lower() or
                    any(word in correct_name.lower() for word in old_dept_name.lower().split() if len(word) > 3)):
                    student.department = correct_dept
                    student.save()
                    students_updated += 1
                    print(f"üîÑ –û–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–∞: {old_dept_name} ‚Üí {correct_name}")
                    break
    
    # –í–∏–¥–∞–ª—è—î–º–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∫–∞—Ñ–µ–¥—Ä–∏
    deleted_count = 0
    for dept in current_departments:
        if dept.department_name not in correct_departments:
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –Ω–µ–º–∞—î –ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ —Ü—é –∫–∞—Ñ–µ–¥—Ä—É
            if not OnlyTeacher.objects.filter(department=dept).exists() and not OnlyStudent.objects.filter(department=dept).exists():
                print(f"üóëÔ∏è  –í–∏–¥–∞–ª—è—î–º–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É –∫–∞—Ñ–µ–¥—Ä—É: {dept.department_name}")
                dept.delete()
                deleted_count += 1
            else:
                print(f"‚ö†Ô∏è  –ö–∞—Ñ–µ–¥—Ä–∞ {dept.department_name} –º–∞—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è, –∑–∞–ª–∏—à–∞—î–º–æ")
    
    print(f"\n‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"   –û–Ω–æ–≤–ª–µ–Ω–æ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤: {teachers_updated}")
    print(f"   –û–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤: {students_updated}")
    print(f"   –í–∏–¥–∞–ª–µ–Ω–æ –∫–∞—Ñ–µ–¥—Ä: {deleted_count}")
    
    # –í–∏–≤–æ–¥–∏–º–æ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ñ–µ–¥—Ä
    print("\nüìã –§—ñ–Ω–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ñ–µ–¥—Ä:")
    for dept in Department.objects.all().order_by('department_name'):
        print(f"   ‚Ä¢ {dept.department_name}")


def reverse_clean_and_set_departments(apps, schema_editor):
    """
    –í—ñ–¥–∫–∞—Ç - –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ, –æ—Å–∫—ñ–ª—å–∫–∏ –º–∏ –ø—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞—î–º–æ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ
    """
    print("‚ÑπÔ∏è  –í—ñ–¥–∫–∞—Ç –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω - –ø—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞–ª–∏ —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª—é–≤–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∫–∞—Ñ–µ–¥—Ä–∏")


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0040_fix_department_names_final'),
    ]

    operations = [
        migrations.RunPython(clean_and_set_departments, reverse_clean_and_set_departments),
    ]
