# Generated by Django 5.2.4 on 2025-09-21 16:50

from django.db import migrations


def migrate_department_data(apps, schema_editor):
    """
    –ü–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –¥–∞–Ω—ñ –∑ CustomUser.department –≤ OnlyTeacher.department
    """
    CustomUser = apps.get_model('users', 'CustomUser')
    OnlyTeacher = apps.get_model('catalog', 'OnlyTeacher')
    Department = apps.get_model('catalog', 'Department')
    Faculty = apps.get_model('catalog', 'Faculty')
    
    print("üîÑ –ü–æ—á–∞—Ç–æ–∫ –º—ñ–≥—Ä–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–∞—Ñ–µ–¥—Ä...")
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ Department –æ–±'—î–∫—Ç–∏ –¥–ª—è –≤—Å—ñ—Ö —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∫–∞—Ñ–µ–¥—Ä
    department_mapping = {}
    unique_departments = CustomUser.objects.filter(
        role='–í–∏–∫–ª–∞–¥–∞—á', 
        department__isnull=False
    ).values_list('department', flat=True).distinct()
    
    print(f"üìã –ó–Ω–∞–π–¥–µ–Ω–æ {len(unique_departments)} —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –∫–∞—Ñ–µ–¥—Ä")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –ø–µ—Ä—à–∏–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç —è–∫ fallback
    fallback_faculty = Faculty.objects.first()
    if not fallback_faculty:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É!")
        return
    
    for dept_name in unique_departments:
        if dept_name and dept_name.strip():
            # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ Department
            dept_obj, created = Department.objects.get_or_create(
                department_name=dept_name,
                defaults={'faculty': fallback_faculty}
            )
            department_mapping[dept_name] = dept_obj
            if created:
                print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤—É –∫–∞—Ñ–µ–¥—Ä—É: {dept_name}")
            else:
                print(f"üìå –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ —ñ—Å–Ω—É—é—á—É –∫–∞—Ñ–µ–¥—Ä—É: {dept_name}")
    
    # –û–Ω–æ–≤–ª—é—î–º–æ OnlyTeacher –ø—Ä–æ—Ñ—ñ–ª—ñ
    updated_count = 0
    for user in CustomUser.objects.filter(role='–í–∏–∫–ª–∞–¥–∞—á'):
        if user.department and user.department in department_mapping:
            try:
                teacher_profile = OnlyTeacher.objects.get(teacher_id=user)
                teacher_profile.department = department_mapping[user.department]
                teacher_profile.save()
                updated_count += 1
                print(f"üîÑ –û–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–æ—Ñ—ñ–ª—å –≤–∏–∫–ª–∞–¥–∞—á–∞: {user.email}")
            except OnlyTeacher.DoesNotExist:
                print(f"‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ—ñ–ª—å –¥–ª—è –≤–∏–∫–ª–∞–¥–∞—á–∞: {user.email}")
    
    print(f"‚úÖ –ú—ñ–≥—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø—Ä–æ—Ñ—ñ–ª—ñ–≤ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤")


def reverse_migrate_department_data(apps, schema_editor):
    """
    –ó–≤–æ—Ä–æ—Ç–Ω–∞ –º—ñ–≥—Ä–∞—Ü—ñ—è (–¥–ª—è –≤—ñ–¥–∫–∞—Ç—É)
    """
    CustomUser = apps.get_model('users', 'CustomUser')
    OnlyTeacher = apps.get_model('catalog', 'OnlyTeacher')
    
    print("üîÑ –í—ñ–¥–∫–∞—Ç –º—ñ–≥—Ä–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∫–∞—Ñ–µ–¥—Ä...")
    
    updated_count = 0
    for teacher in OnlyTeacher.objects.filter(department__isnull=False):
        if teacher.teacher_id.department != teacher.department.department_name:
            teacher.teacher_id.department = teacher.department.department_name
            teacher.teacher_id.save()
            updated_count += 1
            print(f"üîÑ –í—ñ–¥–∫–∞—Ç –ø—Ä–æ—Ñ—ñ–ª—é –≤–∏–∫–ª–∞–¥–∞—á–∞: {teacher.teacher_id.email}")
    
    print(f"‚úÖ –í—ñ–¥–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –û–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø—Ä–æ—Ñ—ñ–ª—ñ–≤ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤")


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0006_alter_customuser_academic_group'),
        ('catalog', '0035_populate_initial_data'),  # –ó–∞–ª–µ–∂–Ω—ñ—Å—Ç—å –≤—ñ–¥ –∫–∞—Ç–∞–ª–æ–≥—É
    ]

    operations = [
        migrations.RunPython(migrate_department_data, reverse_migrate_department_data),
    ]
