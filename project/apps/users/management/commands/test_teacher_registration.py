from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.db import transaction
from apps.catalog.models import Department, Faculty, OnlyTeacher
from apps.users.services.registration_services import create_teacher_profile
import logging

User = get_user_model()
logger = logging.getLogger(__name__)

class Command(BaseCommand):
    help = '–¢–µ—Å—Ç—É—î —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—ñ–≤ –∑ –∫–∞—Ñ–µ–¥—Ä–∞–º–∏'

    def add_arguments(self, parser):
        parser.add_argument(
            '--cleanup',
            action='store_true',
            help='–û—á–∏—Å—Ç–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è–º',
        )
        parser.add_argument(
            '--create-test-data',
            action='store_true',
            help='–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ (—Ñ–∞–∫—É–ª—å—Ç–µ—Ç —Ç–∞ –∫–∞—Ñ–µ–¥—Ä–∏)',
        )

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üöÄ –ü–û–ß–ê–¢–û–ö –¢–ï–°–¢–£–í–ê–ù–ù–Ø –†–ï–Ñ–°–¢–†–ê–¶–Ü–á –í–ò–ö–õ–ê–î–ê–ß–Ü–í'))
        self.stdout.write('=' * 60)
        
        if options['cleanup']:
            self.cleanup_test_data()
        
        if options['create_test_data']:
            self.create_test_data()
        
        # –¢–µ—Å—Ç—É—î–º–æ —Ä—ñ–∑–Ω—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó
        self.test_teacher_registration_scenarios()
        
        self.stdout.write('=' * 60)
        self.stdout.write(self.style.SUCCESS('‚úÖ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û'))

    def cleanup_test_data(self):
        """–û—á–∏—â–∞—î —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ"""
        self.stdout.write(self.style.WARNING('üßπ –û—á–∏—â–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö...'))
        
        try:
            # –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
            test_users = User.objects.filter(email__contains='test.teacher')
            deleted_users = test_users.count()
            test_users.delete()
            self.stdout.write(f'   –í–∏–¥–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {deleted_users}')
            
            # –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –∫–∞—Ñ–µ–¥—Ä–∏
            test_departments = Department.objects.filter(department_name__contains='–¢–ï–°–¢')
            deleted_deps = test_departments.count()
            test_departments.delete()
            self.stdout.write(f'   –í–∏–¥–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–∞—Ñ–µ–¥—Ä: {deleted_deps}')
            
            # –í–∏–¥–∞–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç
            test_faculty = Faculty.objects.filter(name__contains='–¢–ï–°–¢')
            deleted_faculty = test_faculty.count()
            test_faculty.delete()
            self.stdout.write(f'   –í–∏–¥–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–∏—Ö —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—ñ–≤: {deleted_faculty}')
            
            self.stdout.write(self.style.SUCCESS('‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ'))
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è: {e}'))

    def create_test_data(self):
        """–°—Ç–≤–æ—Ä—é—î —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ"""
        self.stdout.write(self.style.WARNING('üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö...'))
        
        try:
            # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç
            faculty, created = Faculty.objects.get_or_create(
                name="–¢–ï–°–¢ –§–∞–∫—É–ª—å—Ç–µ—Ç –µ–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∏ —Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π",
                defaults={'short_name': 'test_electronics'}
            )
            if created:
                self.stdout.write(f'   ‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç: {faculty.name}')
            else:
                self.stdout.write(f'   ‚ÑπÔ∏è  –§–∞–∫—É–ª—å—Ç–µ—Ç –≤–∂–µ —ñ—Å–Ω—É—î: {faculty.name}')
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ –∫–∞—Ñ–µ–¥—Ä–∏
            test_departments = [
                "–¢–ï–°–¢ –ö–∞—Ñ–µ–¥—Ä–∞ —Ä–∞–¥—ñ–æ–∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º",
                "–¢–ï–°–¢ –ö–∞—Ñ–µ–¥—Ä–∞ —Ä–∞–¥—ñ–æ—Ñ—ñ–∑–∏–∫–∏ —Ç–∞ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π",
                "–¢–ï–°–¢ –ö–∞—Ñ–µ–¥—Ä–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç—É–≤–∞–Ω–Ω—è"
            ]
            
            created_deps = 0
            for dep_name in test_departments:
                dep, created = Department.objects.get_or_create(
                    department_name=dep_name,
                    defaults={'faculty': faculty}
                )
                if created:
                    created_deps += 1
                    self.stdout.write(f'   ‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–∞—Ñ–µ–¥—Ä—É: {dep_name}')
            
            self.stdout.write(f'   üìä –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–∞—Ñ–µ–¥—Ä: {created_deps}')
            self.stdout.write(self.style.SUCCESS('‚úÖ –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ —Å—Ç–≤–æ—Ä–µ–Ω–æ'))
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö: {e}'))

    def test_teacher_registration_scenarios(self):
        """–¢–µ—Å—Ç—É—î —Ä—ñ–∑–Ω—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤"""
        self.stdout.write(self.style.WARNING('üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó...'))
        
        # –°—Ü–µ–Ω–∞—Ä—ñ–π 1: –£—Å–ø—ñ—à–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑ –∫–∞—Ñ–µ–¥—Ä–æ—é
        self.test_successful_registration()
        
        # –°—Ü–µ–Ω–∞—Ä—ñ–π 2: –°–ø—Ä–æ–±–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –±–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏
        self.test_registration_without_department()
        
        # –°—Ü–µ–Ω–∞—Ä—ñ–π 3: –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑ –Ω–µ—ñ—Å–Ω—É—é—á–æ—é –∫–∞—Ñ–µ–¥—Ä–æ—é
        self.test_registration_with_invalid_department()
        
        # –°—Ü–µ–Ω–∞—Ä—ñ–π 4: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É—é—á–∏—Ö –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ –±–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏
        self.check_existing_teachers_without_department()

    def test_successful_registration(self):
        """–¢–µ—Å—Ç—É—î —É—Å–ø—ñ—à–Ω—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –≤–∏–∫–ª–∞–¥–∞—á–∞ –∑ –∫–∞—Ñ–µ–¥—Ä–æ—é"""
        self.stdout.write('\nüìã –°—Ü–µ–Ω–∞—Ä—ñ–π 1: –£—Å–ø—ñ—à–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑ –∫–∞—Ñ–µ–¥—Ä–æ—é')
        
        try:
            # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–µ—Å—Ç–æ–≤—É –∫–∞—Ñ–µ–¥—Ä—É
            department = Department.objects.filter(department_name__contains='–¢–ï–°–¢').first()
            if not department:
                self.stdout.write(self.style.ERROR('   ‚ùå –ù–µ–º–∞—î —Ç–µ—Å—Ç–æ–≤–∏—Ö –∫–∞—Ñ–µ–¥—Ä –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è'))
                return
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            test_email = 'test.teacher.success@lnu.edu.ua'
            
            # –í–∏–¥–∞–ª—è—î–º–æ —è–∫—â–æ —ñ—Å–Ω—É—î
            User.objects.filter(email=test_email).delete()
            
            user = User.objects.create_user(
                email=test_email,
                first_name='–¢–µ—Å—Ç–æ–≤–∏–π',
                last_name='–í–∏–∫–ª–∞–¥–∞—á',
                patronymic='–£—Å–ø—ñ—à–Ω–∏–π',
                role='–í–∏–∫–ª–∞–¥–∞—á'
            )
            
            # –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
            create_teacher_profile(user, '–î–æ—Ü–µ–Ω—Ç', department)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            teacher_profile = user.get_profile()
            if teacher_profile:
                if teacher_profile.department:
                    self.stdout.write(self.style.SUCCESS(f'   ‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ'))
                    self.stdout.write(f'   üìä –ö–∞—Ñ–µ–¥—Ä–∞: {teacher_profile.department.department_name}')
                    self.stdout.write(f'   üìä –ü–æ—Å–∞–¥–∞: {teacher_profile.academic_level}')
                else:
                    self.stdout.write(self.style.ERROR('   ‚ùå –ü—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ, –∞–ª–µ –∫–∞—Ñ–µ–¥—Ä–∞ –Ω–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∞'))
                    self.stdout.write(f'   üìä –ü–æ—Å–∞–¥–∞: {teacher_profile.academic_level}')
            else:
                self.stdout.write(self.style.ERROR('   ‚ùå –ü—Ä–æ—Ñ—ñ–ª—å –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ'))
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}'))

    def test_registration_without_department(self):
        """–¢–µ—Å—Ç—É—î —Å–ø—Ä–æ–±—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –±–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏"""
        self.stdout.write('\nüìã –°—Ü–µ–Ω–∞—Ä—ñ–π 2: –°–ø—Ä–æ–±–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –±–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏')
        
        try:
            test_email = 'test.teacher.no.department@lnu.edu.ua'
            
            # –í–∏–¥–∞–ª—è—î–º–æ —è–∫—â–æ —ñ—Å–Ω—É—î
            User.objects.filter(email=test_email).delete()
            
            user = User.objects.create_user(
                email=test_email,
                first_name='–¢–µ—Å—Ç–æ–≤–∏–π',
                last_name='–í–∏–∫–ª–∞–¥–∞—á',
                patronymic='–ë–µ–∑–ö–∞—Ñ–µ–¥—Ä–∏',
                role='–í–∏–∫–ª–∞–¥–∞—á'
            )
            
            # –°–ø—Ä–æ–±–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –±–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏
            try:
                create_teacher_profile(user, '–î–æ—Ü–µ–Ω—Ç', None)
                self.stdout.write(self.style.ERROR('   ‚ùå –ü–æ–º–∏–ª–∫–∞: –ø—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ –±–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏!'))
            except ValueError as e:
                self.stdout.write(self.style.SUCCESS(f'   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ: {e}'))
            except Exception as e:
                self.stdout.write(self.style.ERROR(f'   ‚ùå –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}'))
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}'))

    def test_registration_with_invalid_department(self):
        """–¢–µ—Å—Ç—É—î —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –∑ –Ω–µ—ñ—Å–Ω—É—é—á–æ—é –∫–∞—Ñ–µ–¥—Ä–æ—é"""
        self.stdout.write('\nüìã –°—Ü–µ–Ω–∞—Ä—ñ–π 3: –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∑ –Ω–µ—ñ—Å–Ω—É—é—á–æ—é –∫–∞—Ñ–µ–¥—Ä–æ—é')
        
        try:
            test_email = 'test.teacher.invalid.department@lnu.edu.ua'
            
            # –í–∏–¥–∞–ª—è—î–º–æ —è–∫—â–æ —ñ—Å–Ω—É—î
            User.objects.filter(email=test_email).delete()
            
            user = User.objects.create_user(
                email=test_email,
                first_name='–¢–µ—Å—Ç–æ–≤–∏–π',
                last_name='–í–∏–∫–ª–∞–¥–∞—á',
                patronymic='–ù–µ—ñ—Å–Ω—É—é—á–∞–ö–∞—Ñ–µ–¥—Ä–∞',
                role='–í–∏–∫–ª–∞–¥–∞—á'
            )
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–µ–π–∫–æ–≤—É –∫–∞—Ñ–µ–¥—Ä—É
            fake_department = type('FakeDepartment', (), {'department_name': '–ù–µ—ñ—Å–Ω—É—é—á–∞ –∫–∞—Ñ–µ–¥—Ä–∞'})()
            
            try:
                create_teacher_profile(user, '–î–æ—Ü–µ–Ω—Ç', fake_department)
                self.stdout.write(self.style.ERROR('   ‚ùå –ü–æ–º–∏–ª–∫–∞: –ø—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑ –Ω–µ—ñ—Å–Ω—É—é—á–æ—é –∫–∞—Ñ–µ–¥—Ä–æ—é!'))
            except Exception as e:
                self.stdout.write(self.style.SUCCESS(f'   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ: {str(e)[:100]}...'))
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}'))

    def check_existing_teachers_without_department(self):
        """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —ñ—Å–Ω—É—é—á–∏—Ö –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ –±–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏"""
        self.stdout.write('\nüìã –°—Ü–µ–Ω–∞—Ä—ñ–π 4: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É—é—á–∏—Ö –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ –±–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏')
        
        try:
            # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ –±–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏
            teachers_without_department = OnlyTeacher.objects.filter(department__isnull=True)
            count = teachers_without_department.count()
            
            if count > 0:
                self.stdout.write(self.style.WARNING(f'   ‚ö†Ô∏è  –ó–Ω–∞–π–¥–µ–Ω–æ {count} –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ –±–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏:'))
                for teacher in teachers_without_department[:5]:  # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à–∏—Ö 5
                    self.stdout.write(f'      - {teacher.teacher_id.get_full_name_with_patronymic()} ({teacher.teacher_id.email})')
                if count > 5:
                    self.stdout.write(f'      ... —Ç–∞ —â–µ {count - 5} –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤')
            else:
                self.stdout.write(self.style.SUCCESS('   ‚úÖ –í—Å—ñ –≤–∏–∫–ª–∞–¥–∞—á—ñ –º–∞—é—Ç—å –ø—Ä–∏–∑–Ω–∞—á–µ–Ω—ñ –∫–∞—Ñ–µ–¥—Ä–∏'))
            
            # –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            total_teachers = OnlyTeacher.objects.count()
            self.stdout.write(f'   üìä –ó–∞–≥–∞–ª–æ–º –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤: {total_teachers}')
            self.stdout.write(f'   üìä –ë–µ–∑ –∫–∞—Ñ–µ–¥—Ä–∏: {count}')
            self.stdout.write(f'   üìä –ó –∫–∞—Ñ–µ–¥—Ä–æ—é: {total_teachers - count}')
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'   ‚ùå –ü–æ–º–∏–ª–∫–∞: {e}'))

    def show_department_statistics(self):
        """–ü–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞—Ñ–µ–¥—Ä–∞—Ö"""
        self.stdout.write('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ö–ê–§–ï–î–†–ê–•:')
        
        try:
            departments = Department.objects.all()
            for dep in departments:
                teacher_count = OnlyTeacher.objects.filter(department=dep).count()
                self.stdout.write(f'   {dep.department_name}: {teacher_count} –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤')
                
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'   ‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}'))
